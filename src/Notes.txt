Looking through the last lab we did and relying heavily on it 
Also looking at notes from last time I did this, but I didn't understand it then so it wasn't much help. 

I have a note that says I need to figure out how to map the bird something onto the ends in BirdLayout.

I also have something that says {birdData.map ((birds) => {
    return (
        <BirdLayout birds={birdData}/>
    )
})}
<Cart />

More code in my notes:
Bird({bird, updateCart})


It said we didn't need to format it but I remember it was hard to look at otherwise. 

IF I am setting cart content in handleAdopt, where is the state and where/what are the props?

what did I mean by "Calling a ffunction inside of child that will update things inside of the parent?


================  unused from my App.js ===============

// Didn't Use:

    
    // const [ discount, setDiscount ] = useState(false);
    // const [ buyingBirds, setBuyingBirds ] = useState([]);

    // const wantedBirds = [...buyingBirds];
    // //const birdIndex = wantedBirds.findIndex(bird)( birdID === birdData.id);
    // //const bird = {...wantedBirds[birdIndex]};

    // let sum = 0
    // // Taking my discount from the last time I did this to see if this will help

    // let discount = props.cart.length >2 ? 10: 0;
    // console.log("props.discount: ", props.discount)

          
      console.log(cart, bird, "Adopt button clicked");
      console.log(bird.amount, "is the amount")
      console.log(cartTotal+bird.amount)
      console.log (funExtras)
      console.log("bird ", bird, " birddata is ", birdData, "id is ", bird.id, "key is " , bird.key)






===========  Checkout ==============
So this has to be a form (I realize while looking at the lifting state lab).



===========        ALL IN ONE         ==============
import {useState} from  "react";
// import { v1 as generateUniqueID } from "uuid";
import birdData from "./data/birds";
import Cart from "./Components/Cart";
import BirdBoard from "./Components/BirdBoard";
import Checkout from "./Components/Checkout";
import "./App.css"
import bonusItems from "./data/bonusItems"

function App (props) {
 const [ cart, setCart ] = useState([]);
 const [ cartTotal, setCartTotal ] = useState(null);
 const [funExtras, setFunExtras] = useState([]);


 const [ birds, setBirds ] = useState([]);


 function getBonusItems(total) {
   if (total >= 100 && total < 300) {
     setFunExtras([bonusItems[0]]);
   } else if (total >= 300  && total < 500) {
     setFunExtras( [bonusItems[0], bonusItems[1]]);
   } else if (total >= 500 && total < 1000) {
     setFunExtras( [bonusItems[0], bonusItems[1], bonusItems[2]]);
   } else if (total >= 1000) {
     setFunExtras( bonusItems);
   }
 }

   function handleAdopt(bird) {
      setCart([
       ...cart, bird 
      ])
      setCartTotal(bird.amount+cartTotal);
      getBonusItems(bird.amount+cartTotal)
      }

      function deleteBird(badBird) {
        const filteredCart=cart.filter((item)=>(badBird.id !== item.id))
        setCart(filteredCart);
        setCartTotal(cartTotal-badBird.amount)
      }
        

  return (
    <div>
      <header>
        <h1>The Bird Sanctuary</h1>
      </header>
        <Cart cart={cart} setCart={setCart} cartTotal={cartTotal} setCartTotal={setCartTotal} birds={birds} deleteBird={deleteBird} />
        <Checkout />
        <BirdBoard cart={cart} setCart={setCart}  cartTotal={cartTotal} setCartTotal={setCartTotal} handleAdopt={handleAdopt} />

      <footer className="footer">after these messages, we'll be right back</footer>
    </div>
  );
};

export default App;

import BirdCards from "./BirdCards"
import birdData from '../data/birds'

// We are getting the data from birdData and maps over it to create an array of Bird cards, passing each bird's information as props. But I also added a key which equals a UUID. However, that woukd really only be needed in a list item I think, so I will get rid of it for now



function BirdBoard(props) {


//guard clause for if there are no birds
  if (!birdData) { 
    return null;
   };

  return (
    <div className='birdBoard'>
        <div className='card'>
          {birdData.map((bird) => (
            <BirdCards 
              // key =   { generateUniqueID }
              name =  { bird.name }
              id =    { bird.id }
              img =   { bird.img }
              amount = { bird.amount }
              bird =  {bird}
              // handleAdopt = {handleAdopt}
              />
            ))}
        </div>
    </div>
  )
}

export default BirdBoard


function BirdCards(props) {

  const { name, amount, img, id } = props;
  const priceInDollars = amount


  return (
    <div className="card">
      
      <h4>{ name }</h4>
      <p>price: {`$${priceInDollars}`}</p>
      <div className='image-box'>
        <img src={ img } alt={ `${name} profile pic` } />
      </div>
      <p>ID #{id}</p>
      <button className='birds' id='adopt' onClick="" >
        ADOPT
      </button>       
    </div>
  )
}

export default BirdCards
import { v1 as generateUniqueID } from "uuid";

function Cart(props) {

  let discount = props.cart.length > 2 ? 10 : 0;
  console.log("props.cart: ", props.cart);

  return (
    <>
    <div className="cart">
        <h3>Your Cart</h3>
        <ol>
        {props.cart.map((bird) => (
          <li key={generateUniqueID()}>{bird.name},   ${bird.amount} - <button className="deleteButton" id="deleteButton" onClick={() => props.deleteBird(bird)}>
          Delete This Bird
          </button></li>
        ))}
      </ol>

      {/* Display Bonus Items Earned */}
      <p> Bonus items earned: </p>
      <ul>
      {/* {props.funExtra.map((items) => (
         <li key={generateUniqueID()}> {items} </li> 
         ))} */}

      </ul> 
      
      <p></p>
      <p>
        Discount: <span id="discount-amount">{discount}%</span>
      </p>

      
        <h4>
          Total: $<span>{(discount === 0) ?  props.total : (props.total)*.9}</span>
        </h4>

        <p className="success-alert" id="success-alert"></p>
    </div>
  
</>
  )
}

export default Cart

import React from 'react'
import { useState } from 'react';
import { v1 as generateUniqueID } from "uuid";


function Checkout(props) {


  const [checkoutForm, setCheckoutForm ] = useState({
    id: "",
    firstName: "",
    lastName: "",
    email: "",
    zipCode: "",
  })

  function handleSubmit(e) {
    e.preventDefault();
    resetCheckoutForm();
  }

  function resetCheckoutForm() {
    setCheckoutForm ({ 
      id: "",
      firstName: "",
      lastName: "",
      email: "",
      zipCode: "",
    });
  }

  function handleTextChange(e) {
    setCheckoutForm({
      ...checkoutForm,
      [e.target.id]: e.target.value,
    });
  }


  return (
    <div className='checkout'>
      <form className= "checkout" onSubmit={handleSubmit}>
        <h3>Checkout Here!</h3>
        <label htmlFor="first-name">First name:</label>
        <input
          type="text"
          id="first-name"
          onChange={handleTextChange}
           />
   
       
        <label htmlFor="last-name">Last name:</label>
        <input
          type="text"
          id="last-name"
          onChange={handleTextChange}
          / >
    
        
        <label htmlFor="email">Email:</label>
        <input
          type="email"
          id="email"
          onChange={handleTextChange}
          />

        <label htmlFor="zip">Zip code:</label>
        <input
          type="number"
          id="zipcode"
          onChange={handleTextChange}
          />

        <input
        type="hidden"
        id="id"
        value={generateUniqueID()}
        />


        <input
        className='button'
        type="submit"
        content="Submit"
        onClick={() => {
          alert("You have adopted one or more birds. Thank you!");
          }} 
        />

        <p className="success-alert" id="success-alert"></p>
      </form>
    </div>
  )
}

export default Checkout
